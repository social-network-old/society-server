version: '2'
networks:
  demo_society:
    external: false

services:
  fake_dynamodb:
    container_name: demo_society_dynamodb
#    image: cnadiminti/dynamodb-local:2018-04-11
    image: julialongtin/dynamodb_local:0.0.9
    ports:
      - 127.0.0.1:4567:8000
    networks:
      - demo_society

  fake_sqs:
    container_name: demo_society_sqs
#    image: airdock/fake-sqs:0.3.1
    image: julialongtin/airdock_fakesqs:0.0.9
    ports:
      - 127.0.0.1:4568:4568
    networks:
      - demo_society

  fake_localstack:
    container_name: demo_society_localstack
#    image: localstack/localstack:0.8.0  # NB: this is younger than 0.8.6!
    image: julialongtin/localstack:0.0.9
    ports:
      - 127.0.0.1:4569:4579 # ses # needed for local integration tests
      - 127.0.0.1:4575:4575 # sns
    environment:
      - DEBUG=1
      - DEFAULT_REGION=eu-west-1
      - SERVICES=ses,sns
    networks:
      - demo_society

  basic_smtp: # needed for demo setup
    container_name: demo_society_smtp
#    image: namshi/smtp
    image: julialongtin/smtp:0.0.9
    ports:
        - 127.0.0.1:2500:25
    networks:
      - demo_society

  fake_s3:
    container_name: demo_society_s3
#    image: minio/minio:RELEASE.2018-05-25T19-49-13Z
    image: julialongtin/minio:0.0.9
    ports:
     - "127.0.0.1:4570:9000"
    environment:
      MINIO_ACCESS_KEY: dummykey
      MINIO_SECRET_KEY: dummysecret # minio requires a secret of at least 8 chars
    command: server /tmp
    networks:
      - demo_society

  # activemq:
  #   image: rmohr/activemq:5.15.4
  #   ports:
  #     - "61613:61613"

  # FIXME: replace redis image with one we build.
  redis:
    container_name: demo_society_redis
    image: redis:3.0.7-alpine
    ports:
      - "127.0.0.1:6379:6379"
    networks:
      - demo_society

  elasticsearch:
    container_name: demo_society_elasticsearch
    #image: elasticsearch:5.6
    image: julialongtin/elasticsearch:0.0.9-amd64
    # https://hub.docker.com/_/elastic is deprecated, but 6.2.4 did not work without further changes.
    # image: docker.elastic.co/elasticsearch/elasticsearch:6.2.4
    ports:
      - "127.0.0.1:9200:9200"
      - "127.0.0.1:9300:9300"
    environment:
      - "bootstrap.system_call_filter=false"
# ES_JVM_OPTIONS is reserved, so...
# what's present in the jvm.options file by default.
#      - "JVM_OPTIONS_ES=-Xmx2g -Xms2g"
      - "JVM_OPTIONS_ES=-Xmx512m -Xms512m"
      - "discovery.type=single-node"
    networks:
      - demo_society

  cassandra:
    container_name: demo_society_cassandra
    #image: cassandra:3.11.2
    image: julialongtin/cassandra:0.0.9
    ports:
      - "127.0.0.1:9042:9042"
    environment:
# what's present in the jvm.options file by default.
#      - "CS_JAVA_OPTIONS=-Xmx1024M -Xms1024M -Xmn200M"
      - "CS_JVM_OPTIONS=-Xmx128M -Xms128M -Xmn50M"
    networks:
      - demo_society

  db_migrations_brig_schema:
    image: quay.io/society/brig-schema
    depends_on:
      - cassandra
    entrypoint: /scripts/db-migrate/brig-schema.sh
    volumes:
      - ./:/scripts
    links:
      - cassandra
    networks:
      - demo_society

  db_migrations_brig_index:
    image: quay.io/society/brig-index
    depends_on:
      - elasticsearch
    entrypoint: /scripts/db-migrate/brig-index.sh
    volumes:
      - ./:/scripts
    links:
      - elasticsearch
    networks:
      - demo_society

  db_migrations_galley:
    image: quay.io/society/galley-schema
    depends_on:
      - cassandra
    entrypoint: /scripts/db-migrate/galley-schema.sh
    volumes:
      - ./:/scripts
    links:
      - cassandra
    networks:
      - demo_society

  db_migrations_gundeck:
    image: quay.io/society/gundeck-schema
    depends_on:
      - cassandra
    entrypoint: /scripts/db-migrate/gundeck-schema.sh
    volumes:
      - ./:/scripts
    links:
      - cassandra
    networks:
      - demo_society

  db_migrations_spar:
    image: quay.io/society/spar-schema
    depends_on:
      - cassandra
    entrypoint: /scripts/db-migrate/spar-schema.sh
    volumes:
      - ./:/scripts
    links:
      - cassandra
    networks:
      - demo_society

  # FIXME: replace aws_cli with an image that we build.
  aws_cli:
    image: mesosphere/aws-cli:1.14.5
    depends_on:
      - fake_dynamodb
      - fake_sqs
      - fake_localstack
      - fake_s3
    links:
      - fake_dynamodb:dynamodb
      - fake_sqs:sqs
      - fake_localstack:ses
      - fake_localstack:sns
      - fake_s3:s3
    entrypoint: /scripts/init.sh
    volumes:
      - ./:/scripts
    networks:
      - demo_society
